<?php

declare(strict_types=1);

namespace App\Repositories;

use App\Models\{$name};
use App\Models\Entity\{$name}Entity;
use Juling\Generator\Contracts\RepositoryInterface;
use Juling\Generator\Repositories\CurdRepository;

class {$name}Repository extends CurdRepository implements RepositoryInterface
{
    private static ?{$name}Repository $instance = null;

    /**
     * 单例
     */
    public static function getInstance(): {$name}Repository
    {
        if (is_null(self::$instance)) {
            self::$instance = new {$name}Repository();
        }

        return self::$instance;
    }

    /**
     * 添加
     */
    public function saveEntity({$name}Entity $entity): int
    {
        return $this->save($entity->toArray());
    }

    /**
     * 按照ID查询返回对象
     */
    public function findOneById(int $id): ?{$name}Entity
    {
        $data = $this->findById($id);
        if (empty($data)) {
            return null;
        }

        $entity = new {$name}Entity();
        $entity->setData($data);

        return $entity;
    }

    /**
     * 按照条件查询返回对象
     */
    public function findOne(array $condition = []): ?{$name}Entity
    {
        $data = $this->find($condition);
        if (empty($data)) {
            return null;
        }

        $entity = new {$name}Entity();
        $entity->setData($data);

        return $entity;
    }

    /**
     * 定义数据数据模型类
     */
    public function model(): {$name}
    {
        return new {$name}();
    }
}
